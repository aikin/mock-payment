<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thoughtworks.midas.withdraw.persistence.mapper.WithdrawOrderMapper">

    <sql id="orderColumns">
          W.ID AS W_ID,
          W.BATCH_NO AS W_BATCH_NO,
          W.CREATED_AT AS W_CREATE_AT,
          W.ORDER_ID AS  W_ORDER_ID,
          W.BANK_CODE AS W_BANK_CODE,
          W.BANK_NO AS W_BANK_NO,
          W.AMOUNT AS W_AMOUNT,
          W.USER_NAME AS W_USER_NAME,
          W.USER_ID AS W_USER_ID,
          W.SENT_STATUS AS W_SENT_STATUS,
          W.SENT_MESSAGE AS W_SENT_MESSAGE,
          W.SENT_AT AS W_SENT_AT,
          W.OFFER_STATUS AS W_OFFER_STATUS,
          W.OFFER_MESSAGE AS W_OFFER_MESSAGE,
          W.OFFER_AT AS W_OFFER_AT,
          W.SYNC_STATUS AS W_SYNC_STATUS
    </sql>

    <resultMap id="withdrawOrder" type="com.thoughtworks.midas.withdraw.persistence.model.WithdrawOrder">
        <id column="W_ID" property="id"/>
        <result column="W_BATCH_NO" property="batchNo"/>
        <result column="W_CREATED_AT" property="createdAt"/>
        <result column="W_ORDER_ID" property="orderId"/>
        <result column="W_BANK_CODE" property="bankCode"/>
        <result column="W_BANK_NO" property="bankNo"/>
        <result column="W_AMOUNT" property="amount"/>
        <result column="W_USER_NAME" property="userName"/>
        <result column="W_USER_ID" property="userId"/>
        <result column="W_SENT_STATUS" property="withdrawStatus"/>
        <result column="W_SENT_MESSAGE" property="sentMessage"/>
        <result column="W_SENT_AT" property="sentAt"/>
        <result column="W_OFFER_STATUS" property="offerStatus"/>
        <result column="W_OFFER_MESSAGE" property="offerMessage"/>
        <result column="W_OFFER_AT" property="offerAt"/>
        <result column="W_SYNC_STATUS" property="syncStatus"/>
    </resultMap>

    <select id="countByWithdrawStatus" resultType="long">
        SELECT
          count(1)
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.SENT_STATUS = #{withdrawStatus}
    </select>

    <select id="countByOfferStatus" resultType="long">
        SELECT
          count(1)
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.OFFER_STATUS = #{offerStatus} AND W.SENT_STATUS = 'SUCCESS'
    </select>

    <select id="findReadyForSentOrders" resultMap="withdrawOrder">
        SELECT
        <include refid="orderColumns"/>
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.SENT_STATUS = 'WAIT_FOR_SENT'
        ORDER BY W.CREATED_AT ASC, W.ID ASC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="findReadyForOfferOrders" resultMap="withdrawOrder">
        SELECT
        <include refid="orderColumns"/>
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.OFFER_STATUS = 'WAIT_FOR_QUERY' AND W.SENT_STATUS = 'SUCCESS'
        ORDER BY W.CREATED_AT ASC, W.ID ASC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="listFailSentOrder" resultMap="withdrawOrder">
        SELECT
        <include refid="orderColumns"/>
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.SENT_STATUS = #{withdrawStatus} AND SYNC_STATUS = #{syncStatus}
        ORDER BY W.CREATED_AT ASC, W.ID ASC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="listOrdersBySentStatus" resultMap="withdrawOrder">
        SELECT
        <include refid="orderColumns"/>
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.SENT_STATUS = #{withdrawStatus}
        ORDER BY W.CREATED_AT ASC, W.ID ASC
        LIMIT 0, #{limit}
    </select>

    <select id="listUnOfferBatchNo" resultType="String" >
        SELECT DISTINCT
          W.BATCH_NO
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.SENT_STATUS = #{withdrawStatus} AND W.OFFER_STATUS = #{offerStatus}
    </select>

    <select id="listUnOfferOrderId" resultType="String">
        SELECT DISTINCT
          W.ORDER_ID
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.SENT_STATUS = #{withdrawStatus} AND W.OFFER_STATUS = #{offerStatus}
        AND W.BATCH_NO = #{batchNo}
        ORDER BY W.CREATED_AT ASC, W.ID ASC
    </select>

    <select id="listOfferOrder" resultMap="withdrawOrder">
        SELECT
        <include refid="orderColumns"/>
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.OFFER_STATUS = #{offerStatus} AND SYNC_STATUS = #{syncStatus}
        ORDER BY W.CREATED_AT ASC, W.ID ASC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getReadyForSentTotalAmount" resultType="Double">
        SELECT
        sum(W.AMOUNT)
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.SENT_STATUS = 'WAIT_FOR_SENT'
    </select>

    <select id="getReadyForOfferTotalAmount" resultType="Double">
        SELECT
        sum(W.AMOUNT)
        FROM YEEPAY_WITHDRAW_ORDER W
        WHERE W.OFFER_STATUS = 'WAIT_FOR_QUERY' AND W.SENT_STATUS = 'SUCCESS'
    </select>

    <insert id="insertNewOrder">
        INSERT INTO YEEPAY_WITHDRAW_ORDER(CREATED_AT, ORDER_ID, BANK_CODE, BANK_NO, AMOUNT, USER_NAME,
                  USER_ID, SENT_STATUS, OFFER_STATUS, SYNC_STATUS)
        VALUES (#{order.createdAt}, #{order.orderId}, #{order.bankCode}, #{order.bankNo}, #{order.amount},
                #{order.userName}, #{order.userId}, #{order.withdrawStatus},
                #{order.offerStatus}, #{order.syncStatus})
    </insert>

    <update id="updateSentStatus">
        <foreach collection="orders" item="item" index="index" open="" separator=";" close="">
            UPDATE YEEPAY_WITHDRAW_ORDER SET BATCH_NO=#{item.batchNo}, SENT_STATUS=#{item.withdrawStatus},
            SENT_MESSAGE=#{item.sentMessage}, SENT_AT=#{item.sentAt}
            WHERE ORDER_ID=#{item.orderId}
        </foreach>
    </update>

    <update id="updateSyncStatus">
        UPDATE YEEPAY_WITHDRAW_ORDER SET SYNC_STATUS=#{order.syncStatus}
        WHERE ORDER_ID=#{order.orderId}
    </update>

    <update id="updateQueryStatus">
        UPDATE YEEPAY_WITHDRAW_ORDER SET OFFER_STATUS=#{offerStatus}, OFFER_MESSAGE=#{offerMessage},
              OFFER_AT=#{offerAt}
        WHERE ORDER_ID=#{orderId}
    </update>

</mapper>